
Roles { 0 = manufacturer, 2 = distributor, 1 = seller}

// test network product 1
// address 0xb15032606166e0620832Ee92ad79662ef7F80063 =>
// 3b38cc0a9cc8cdde0b05b76ae8251622:ac900db1b1f77308a65eea5b5ccc2b892dd18205895a13c2e352db74a4814f7b0664557f922ef0e57be82589207218e1
// id 1 => 79abcf492c6571281386fb0c9d7cbba1:f6f686c2097264e25b2c2ecbb2a0fbe2

// deployed with account on node01, contract address = 0xc9965e8B990F5e7E48b32B8aBbE912A05B6c9678

rinkeby address contract = 0x525A3fC122A9048Bae1693Deb25B73aB49306742
local address dell = 0x195F90Db9c8574189CCf8819bB67feE6B502f43F

Ganache Linux Mint => {
    ProvenanceContracts {
    Man1 - Distrib2 - Distrib1 - Sel1 => 0x000000000000000000000000b78728350da4bf2cc308ab081eb8eea3a3be34d4
}
    TrackerContractAddress = 0x3449BB31ad95585Fe455b0713d2286a3FEcf0a50
    deployer = 0x2Cd755E0836C99eDea2E7543B608b0440dF4746F
Manufacturer1 = 0x0B4f77e363D616619EC62b6c170ec89dA009D3C1, Nike, London
Manufacturer2 = 0xfD2508300712d411A3A8a0A9ef977A125660862e, Puma, London
Seller1 = 0xC84c54141C5bbB2beBDBEe60A72c382EdA4Ac946, Tesco, Reading
Seller2 = 0x91d99C048e487da7060F8362Fa1196236fd2b115, Sainsbury's, Manchester
Distributor1 = 0x41aC78c7De22908a06173F1046bE05C85477f6d3, Amazon, London
Distributor2 = 0x334805D9FC31F4325C8376b9C731B386A3fF0455, DPD, London
}

Ganache Win 10 => {
    TrackerContractAddress = 0x34651197d094905fBD7EF207063ACA4FA9cb69Db
deployer = 0x66C21b7b62f4F3Fa53114Ab8cb6aBa2497d21523
Manufacturer1 = 0xb1BEBDd098F2EfE5A517968DfF941750fdAF9211, Nike
Manufacturer2 = 0xC2013bd7182592de735F487d657c7DB2c0cA2cfa, Adidas
Seller1 = 0x2ce06C0028fC4DB7E923aE630aC614fA677260a7, Tesco
Seller2 = 0x7B69Af132D1FA62654aCAbb53633B373953758FF, Sainsbury's
Distributor1 = 0x249c51d35457a6E130e0D3fc207abb0cb8b59077, Amazon
Distributor2 = 0xb2a1461916A4ed5D5B7C92860A309B9237Bc7abD, DPD
}

Seller1 {
    branch: "Madalin's Home", "51.49233", "-0.02048"
}
Seller2 {
    branch: "Madalin's Home", "51.49233", "-0.02048"
}

commands => {
    let con = await TrackerContract.deployed()
    let accounts = await web3.eth.getAccounts()
    let r = await con.createProvenanceContract("0x5a6C3F0d9802a039f3175E5bd0a7027538561Cfc", "nike shoes", {from: accounts[1]})
    let user = await con.addUser("accountAddress", "name", "role")
    let user = await con.addUser("0x101143F5B3b4723e8f3E7C32d95a7d4D8E8BAfb3", "Nike", "$2a$10$s9dv0fK0J0iQg44WySWtyuSjIynfXeknV7nOXSNJHVqLb6RXlx28O", "manufacturer", "2020-05-08T12:33:29.954Z")
    const newBranch = await con.addBranch("branchName", "latitude", "longitude", {from: ""})
    let {addUsers, addBranches} = require("./commands.js")
    let res = await addUsers(con)
    res = await addBranches(con)
}


on rinkeby => {
   TrackerContractAddress = 0xcC8A71043CE94A38b5119E3ef1035C47C756DDa2
   accountForDeployment = 0x101143F5B3b4723e8f3E7C32d95a7d4D8E8BAfb3
}



